{:tasks
 {:requires ([babashka.fs :as fs])
  :init (do
          (def n "pod-atomisthq-tools.docker")
          (def os "macos")
          (def version "0.1.0"))
  check-for-builder {:task (-> (shell "docker buildx inspect buildx-multi-arch"))}
  setup-builder {:task (if (= 1 (:exit check-for-builder))
                         (shell {:continue true} "docker buildx create --name=buildx-multi-arch --driver=docker-container --driver-opt=network=host")
                         (println "buildx-multi-arch is already running"))
                 :depends [check-for-builder]}
  build-pod-image {:task (shell "docker buildx build --builder=buildx-multi-arch --push --platform=linux/amd64,linux/arm64 --tag=vonwig/pod-atomisthq-tools.docker .")
                   :depends [setup-builder]}

  build (do (shell (format "go build -o %s" n))
            (fs/copy "pod-atomisthq-tools.docker" "/Users/slim/.babashka/pods/repository/atomisthq/tools.docker/0.1.0/" {:replace-existing true})
            (fs/copy "pod-atomisthq-tools.docker" "/Users/slim/.vscode/extensions/docker.slim-docker-lsp-client-0.0.1/" {:replace-existing true})
            (fs/copy "pod-atomisthq-tools.docker" "/Users/slim/kipz/docker-vscode-project-extension/" {:replace-existing true}))
  aarch64 (do
            (shell (format "zip %s-%s-%s-%s.zip %s" n version os "aarch64" n) {}))
  x86     (do
            (shell (format "zip %s-%s-%s-%s.zip %s" n version os "x86_64" n) {}))
  linux-x86
  (do
    (shell (format "zip %s-%s-%s-%s.zip %s" n version "linux" "amd64" n) {}))}}

